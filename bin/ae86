#!/usr/bin/env node

var DEFAULT_LAYOUTS_DIR = 'layouts',
    DEFAULT_PAGES_DIR = 'pages',
    DEFAULT_PARTIALS_DIR = 'partials',
    DEFAULT_STATIC_DIR = 'static',
    DEFAULT_OUT_DIR = 'out',
    DEFAULT_FILE = 'params.js',
    DEFAULT_ENGINE = 'jazz',
    DEFAULT_IGNORE = '.cvs,.git,.svn,.DS_Store',
    DEFAULT_ENCODING = 'utf-8',
    DEFAULT_MODE = 0755,
    path = require('path'),
    nomnom = require('nomnom'),
    AE86 = require('../lib/ae86').AE86,
    base = process.cwd(),
    opts, options, instance, doInit, doGen, doClean;

instance = function (args) {
    options = {
        layouts: path.join(base, DEFAULT_LAYOUTS_DIR),
        pages: path.join(base, DEFAULT_PAGES_DIR),
        partials: path.join(base, DEFAULT_PARTIALS_DIR),
        static: path.join(base, DEFAULT_STATIC_DIR),
        out: path.join(base, (args.out || DEFAULT_OUT_DIR)),
        params: (path.existsSync(path.join(base, DEFAULT_FILE))) ? require(path.join(base, DEFAULT_FILE.replace(/\.js/, ''))).params : {},
        engine: args.engine || DEFAULT_ENGINE,
        ignore: (args.ignore) ? args.ignore.split(',') : DEFAULT_IGNORE.split(','),
        encoding: DEFAULT_ENCODING,
        mode: DEFAULT_MODE
    };
    return new AE86(options);
};

doInit = function (args) {
    instance(args).init();
};

doGen = function (args) {
    instance(args).generate();
};

doClean = function (args) {
    instance(args).clean();
};

opts = {
    out: {
        string: '-o OUT_DIR',
        help: 'Directory where the website files will be written to, default: ' + DEFAULT_OUT_DIR
    },
    engine: {
        string: '-e ENGINE',
        help: 'Templating engine, default: ' + DEFAULT_ENGINE
    },
    ignore: {
        string: '-i IGNORE',
        help: 'Directories/files to be ignored (comma separated), default: ' + DEFAULT_IGNORE
    }
};

nomnom.scriptName('ae86');
nomnom.globalOpts(opts);
nomnom.command('init').callback(doInit);
nomnom.command('gen').callback(doGen);
nomnom.command('clean').callback(doClean);
nomnom.parseArgs();
#!/usr/bin/env node

var path = require('path'),
    AE86 = require('../lib/ae86').AE86,
    base = process.cwd(),
    args = process.argv.slice(2),
    usage, abort, options;
    
usage = 'Usage: ae86 [init] [options]\n'
    + '\n'
    + '  init           Initialise project\n' 
    + '\n'
    + 'Options:\n'
    + '  -o, --out      Directory where the static pages will be written to\n'
    + '  -e, --engine   Templating engine\n'
    + '  -h, --help     Display help info\n';

abort = function (message) {
    console.error(message);
    process.exit(1);
};

while (args.length) {
    var arg = args.shift();
    switch (arg) {
        case 'init':
            args.action = arg;
            break;
        case '-o':
        case '--out':
            args.length
                ? (args.out = args.shift())
                : abort('--out requires an argument');
            break;
        case '-e':
        case '--engine':
            args.length
                ? (args.engine = args.shift())
                : abort('--engine requires an argument');
            break;
        case '-h':
        case '--help':
            abort(usage);
            break;
    }
}

options = {
        layouts: path.join(base, 'layouts'),
        pages: path.join(base, 'pages'),
        partials: path.join(base, 'partials'),
        static: path.join(base, 'static'),
        out: path.join(base, (args.out || 'out')),
        params: (path.existsSync(path.join(base, 'params.js'))) ? require(path.join(base, 'params')).params : {},
        engine: args.engine || 'jazz',
        encoding: args.encoding || 'utf-8',
        mode: args.mode || 0755
    },
    ae86 = new AE86(options);
switch (args.action) {
    case 'init':
        ae86.init();
        break;
    case undefined:
        ae86.drift();
        break;
}